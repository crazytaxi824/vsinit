{
	// "$schema": "https://json.schemastore.org/tsconfig",
	"compileOnSave": false,
	"compilerOptions": {
		"module": "commonjs",
		"moduleResolution": "node",
		"target": "es5", // es6=es2015, 默认情况下使用es6，拥有 map & set
		"lib": ["dom", "dom.iterable", "esnext"], // 包含了声明文件列表，你仍然拥有较新的类型声明
		"outDir": "dist", // important, ts 转为 js 文件时的地址. 一般为 "dist" | "out"
		"sourceMap": true, // 必须为true，debug 用. 和 outDir 配合使用.
		"jsx": "react-jsx", // 指定 jsx 代码的生成: preserve | react | react-jsx | react-native
		"allowJs": true, // 允许编译 js 文件.
		"strict": true, // 启用所有严格模式，6个严格规则
		"noImplicitReturns": true, // 强制定义出参类型
		"noFallthroughCasesInSwitch": true, // switch 语句 fall-through 不允许
		"experimentalDecorators": true, // 使用装饰器
		"emitDecoratorMetadata": true, // 为装饰器提供元数据的支持
		// 使用 tsc --importHelpers, 当 async/await 文件中有 import/export (自己是 module)的时候。
		"importHelpers": true, // import/export async/await function 用, 需要安装 `npm i -D tslib`
		"downlevelIteration": true,
		"allowSyntheticDefaultImports": true,
		"forceConsistentCasingInFileNames": true, // import 时，文件名大小写敏感
		"resolveJsonModule": true, // 可以 import .json 文件
		"esModuleInterop": true,
		"skipLibCheck": true // 跳过默认库检查
		// NOTE product 环境下需要打开以下检查.
		// "checkJs": true, // 报告 js 文件中的错误，和 allowJs 一起使用.
		// "noUnusedLocals": true, // 有未使用的局部变量时报错
		// "noUnusedParameters": true // 函数有未使用的参数时报错
		// NOTE 以下特定开发情况下再打开以下检查
		// "noEmit": true, // 只做 type check，不进行 compilation
		// "isolatedModules": true, // 开发 module, 所有 func & type 必须 import/export
	},
	// 指定检查&编译文件
	"include": ["src/**/*", "test/**/*"],
	// 排除检查&编译文件
	"exclude": ["node_modules", "out", "dist", "**/*.spec.ts", "**/*.config.js"]
}
